/* Generated by Cython 0.28 */

#ifndef __PYX_HAVE__pycpsw
#define __PYX_HAVE__pycpsw

struct CpswPyWrapO_YamlFixup;
struct CpswPyWrapO_PathVisitor;
struct CpswPyWrapO_AsyncIO;
struct CpswPyExcO_CPSWError;
struct CpswPyExcO_ErrnoError;
struct CpswPyExcO_IOError;
struct CpswPyExcO_InternalError;
struct CpswPyExcO_DuplicateNameError;
struct CpswPyExcO_NotDevError;
struct CpswPyExcO_NotFoundError;
struct CpswPyExcO_InvalidPathError;
struct CpswPyExcO_InvalidIdentError;
struct CpswPyExcO_InvalidArgError;
struct CpswPyExcO_AddressAlreadyAttachedError;
struct CpswPyExcO_ConfigurationError;
struct CpswPyExcO_AddrOutOfRangeError;
struct CpswPyExcO_ConversionError;
struct CpswPyExcO_InterfaceNotImplementedError;
struct CpswPyExcO_BadStatusError;
struct CpswPyExcO_IntrError;
struct CpswPyExcO_StreamDoneError;
struct CpswPyExcO_FailedStreamError;
struct CpswPyExcO_MissingOnceTagError;
struct CpswPyExcO_MissingIncludeFileNameError;
struct CpswPyExcO_NoYAMLSupportError;
struct CpswPyExcO_NoError;
struct CpswPyExcO_MultipleInstantiationError;
struct CpswPyExcO_BadSchemaVersionError;
struct CpswPyExcO_TimeoutError;

/* "pycpsw.pyx":776
 *     self.callback( pyResult, pyStatus )
 * 
 * cdef public class YamlFixup[type CpswPyWrapT_YamlFixup, object CpswPyWrapO_YamlFixup]:             # <<<<<<<<<<<<<<
 *   """
 * The user must implement an implementation for this
 */
struct CpswPyWrapO_YamlFixup {
  PyObject_HEAD
  cpsw_python::CYamlFixup cc_YamlFixup;
};

/* "pycpsw.pyx":814
 *     return n
 * 
 * cdef public class PathVisitor[type CpswPyWrapT_PathVisitor, object CpswPyWrapO_PathVisitor]:             # <<<<<<<<<<<<<<
 *   """
 * Traverse the hierarchy.
 */
struct CpswPyWrapO_PathVisitor {
  PyObject_HEAD
  struct __pyx_vtabstruct_6pycpsw_PathVisitor *__pyx_vtab;
  cpsw_python::CPathVisitor cc_PathVisitor;
};

/* "pycpsw.pyx":857
 *     pass
 * 
 * cdef public class AsyncIO[type CpswPyWrapT_AsyncIO, object CpswPyWrapO_AsyncIO]:             # <<<<<<<<<<<<<<
 *   """
 * Callback base class for asynchronous 'getVal' operations. Subclass
 */
struct CpswPyWrapO_AsyncIO {
  PyObject_HEAD
  cpsw_python::CAsyncIO c_AsyncIO;
};

/* "pycpsw.pyx":1283
 *   return c_setCPSWVerbosity( cstr, level )
 * 
 * cdef public class CPSWError(Exception)[type CpswPyExcT_CPSWError, object CpswPyExcO_CPSWError]:             # <<<<<<<<<<<<<<
 * 
 *   def __init__(self, str msg):
 */
struct CpswPyExcO_CPSWError {
  PyBaseExceptionObject __pyx_base;
};

/* "pycpsw.pyx":1292
 *     return self._msg
 * 
 * cdef public class ErrnoError(CPSWError)[type CpswPyExcT_ErrnoError, object CpswPyExcO_ErrnoError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_ErrnoError] foo = make_shared[cc_ErrnoError]( msg )
 */
struct CpswPyExcO_ErrnoError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1297
 *     self._msg = foo.get().what()
 * 
 * cdef public class IOError(ErrnoError)[type CpswPyExcT_IOError, object CpswPyExcO_IOError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_IOError] foo = make_shared[cc_IOError]( msg )
 */
struct CpswPyExcO_IOError {
  struct CpswPyExcO_ErrnoError __pyx_base;
};

/* "pycpsw.pyx":1302
 *     self._msg = foo.get().what()
 * 
 * cdef public class InternalError(ErrnoError)[type CpswPyExcT_InternalError, object CpswPyExcO_InternalError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_InternalError] foo = make_shared[cc_InternalError]( msg )
 */
struct CpswPyExcO_InternalError {
  struct CpswPyExcO_ErrnoError __pyx_base;
};

/* "pycpsw.pyx":1307
 *     self._msg = foo.get().what()
 * 
 * cdef public class DuplicateNameError(CPSWError)[type CpswPyExcT_DuplicateNameError, object CpswPyExcO_DuplicateNameError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_DuplicateNameError] foo = make_shared[cc_DuplicateNameError]( msg )
 */
struct CpswPyExcO_DuplicateNameError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1312
 *     self._msg = foo.get().what()
 * 
 * cdef public class NotDevError(CPSWError)[type CpswPyExcT_NotDevError, object CpswPyExcO_NotDevError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_NotDevError] foo = make_shared[cc_NotDevError]( msg )
 */
struct CpswPyExcO_NotDevError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1317
 *     self._msg = foo.get().what()
 * 
 * cdef public class NotFoundError(CPSWError)[type CpswPyExcT_NotFoundError, object CpswPyExcO_NotFoundError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_NotFoundError] foo = make_shared[cc_NotFoundError]( msg )
 */
struct CpswPyExcO_NotFoundError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1322
 *     self._msg = foo.get().what()
 * 
 * cdef public class InvalidPathError(CPSWError)[type CpswPyExcT_InvalidPathError, object CpswPyExcO_InvalidPathError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_InvalidPathError] foo = make_shared[cc_InvalidPathError]( msg )
 */
struct CpswPyExcO_InvalidPathError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1327
 *     self._msg = foo.get().what()
 * 
 * cdef public class InvalidIdentError(CPSWError)[type CpswPyExcT_InvalidIdentError, object CpswPyExcO_InvalidIdentError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_InvalidIdentError] foo = make_shared[cc_InvalidIdentError]( msg )
 */
struct CpswPyExcO_InvalidIdentError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1332
 *     self._msg = foo.get().what()
 * 
 * cdef public class InvalidArgError(CPSWError)[type CpswPyExcT_InvalidArgError, object CpswPyExcO_InvalidArgError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_InvalidArgError] foo = make_shared[cc_InvalidArgError]( msg )
 */
struct CpswPyExcO_InvalidArgError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1337
 *     self._msg = foo.get().what()
 * 
 * cdef public class AddressAlreadyAttachedError(CPSWError)[type CpswPyExcT_AddressAlreadyAttachedError, object CpswPyExcO_AddressAlreadyAttachedError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_AddressAlreadyAttachedError] foo = make_shared[cc_AddressAlreadyAttachedError]( msg )
 */
struct CpswPyExcO_AddressAlreadyAttachedError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1342
 *     self._msg = foo.get().what()
 * 
 * cdef public class ConfigurationError(CPSWError)[type CpswPyExcT_ConfigurationError, object CpswPyExcO_ConfigurationError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_ConfigurationError] foo = make_shared[cc_ConfigurationError]( msg )
 */
struct CpswPyExcO_ConfigurationError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1347
 *     self._msg = foo.get().what()
 * 
 * cdef public class AddrOutOfRangeError(CPSWError)[type CpswPyExcT_AddrOutOfRangeError, object CpswPyExcO_AddrOutOfRangeError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_AddrOutOfRangeError] foo = make_shared[cc_AddrOutOfRangeError]( msg )
 */
struct CpswPyExcO_AddrOutOfRangeError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1352
 *     self._msg = foo.get().what()
 * 
 * cdef public class ConversionError(CPSWError)[type CpswPyExcT_ConversionError, object CpswPyExcO_ConversionError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_ConversionError] foo = make_shared[cc_ConversionError]( msg )
 */
struct CpswPyExcO_ConversionError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1357
 *     self._msg = foo.get().what()
 * 
 * cdef public class InterfaceNotImplementedError(CPSWError)[type CpswPyExcT_InterfaceNotImplementedError, object CpswPyExcO_InterfaceNotImplementedError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_InterfaceNotImplementedError] foo = make_shared[cc_InterfaceNotImplementedError]( msg )
 */
struct CpswPyExcO_InterfaceNotImplementedError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1362
 *     self._msg = foo.get().what()
 * 
 * cdef public class BadStatusError(CPSWError)[type CpswPyExcT_BadStatusError, object CpswPyExcO_BadStatusError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg, int status):
 *     cdef shared_ptr[cc_BadStatusError] foo = make_shared[cc_BadStatusError]( msg, status )
 */
struct CpswPyExcO_BadStatusError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1367
 *     self._msg = foo.get().what()
 * 
 * cdef public class IntrError(CPSWError)[type CpswPyExcT_IntrError, object CpswPyExcO_IntrError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_IntrError] foo = make_shared[cc_IntrError]( msg )
 */
struct CpswPyExcO_IntrError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1372
 *     self._msg = foo.get().what()
 * 
 * cdef public class StreamDoneError(CPSWError)[type CpswPyExcT_StreamDoneError, object CpswPyExcO_StreamDoneError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_StreamDoneError] foo = make_shared[cc_StreamDoneError]( msg )
 */
struct CpswPyExcO_StreamDoneError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1377
 *     self._msg = foo.get().what()
 * 
 * cdef public class FailedStreamError(CPSWError)[type CpswPyExcT_FailedStreamError, object CpswPyExcO_FailedStreamError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_FailedStreamError] foo = make_shared[cc_FailedStreamError]( msg )
 */
struct CpswPyExcO_FailedStreamError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1382
 *     self._msg = foo.get().what()
 * 
 * cdef public class MissingOnceTagError(CPSWError)[type CpswPyExcT_MissingOnceTagError, object CpswPyExcO_MissingOnceTagError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_MissingOnceTagError] foo = make_shared[cc_MissingOnceTagError]( msg )
 */
struct CpswPyExcO_MissingOnceTagError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1387
 *     self._msg = foo.get().what()
 * 
 * cdef public class MissingIncludeFileNameError(CPSWError)[type CpswPyExcT_MissingIncludeFileNameError, object CpswPyExcO_MissingIncludeFileNameError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_MissingIncludeFileNameError] foo = make_shared[cc_MissingIncludeFileNameError]( msg )
 */
struct CpswPyExcO_MissingIncludeFileNameError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1392
 *     self._msg = foo.get().what()
 * 
 * cdef public class NoYAMLSupportError(CPSWError)[type CpswPyExcT_NoYAMLSupportError, object CpswPyExcO_NoYAMLSupportError]:             # <<<<<<<<<<<<<<
 *   def __init__(self):
 *     cdef shared_ptr[cc_NoYAMLSupportError] foo = make_shared[cc_NoYAMLSupportError]()
 */
struct CpswPyExcO_NoYAMLSupportError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1397
 *     self._msg = foo.get().what()
 * 
 * cdef public class NoError(CPSWError)[type CpswPyExcT_NoError, object CpswPyExcO_NoError]:             # <<<<<<<<<<<<<<
 *   def __init__(self):
 *     cdef shared_ptr[cc_NoError] foo = make_shared[cc_NoError]()
 */
struct CpswPyExcO_NoError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1402
 *     self._msg = foo.get().what()
 * 
 * cdef public class MultipleInstantiationError(CPSWError)[type CpswPyExcT_MultipleInstantiationError, object CpswPyExcO_MultipleInstantiationError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_MultipleInstantiationError] foo = make_shared[cc_MultipleInstantiationError]( msg )
 */
struct CpswPyExcO_MultipleInstantiationError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1407
 *     self._msg = foo.get().what()
 * 
 * cdef public class BadSchemaVersionError(CPSWError)[type CpswPyExcT_BadSchemaVersionError, object CpswPyExcO_BadSchemaVersionError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_BadSchemaVersionError] foo = make_shared[cc_BadSchemaVersionError]( msg )
 */
struct CpswPyExcO_BadSchemaVersionError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

/* "pycpsw.pyx":1412
 *     self._msg = foo.get().what()
 * 
 * cdef public class TimeoutError(CPSWError)[type CpswPyExcT_TimeoutError, object CpswPyExcO_TimeoutError]:             # <<<<<<<<<<<<<<
 *   def __init__(self, str msg):
 *     cdef shared_ptr[cc_TimeoutError] foo = make_shared[cc_TimeoutError]( msg )
 */
struct CpswPyExcO_TimeoutError {
  struct CpswPyExcO_CPSWError __pyx_base;
};

#ifndef __PYX_HAVE_API__pycpsw

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyWrapT_YamlFixup;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyWrapT_PathVisitor;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyWrapT_AsyncIO;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_CPSWError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_ErrnoError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_IOError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_InternalError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_DuplicateNameError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_NotDevError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_NotFoundError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_InvalidPathError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_InvalidIdentError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_InvalidArgError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_AddressAlreadyAttachedError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_ConfigurationError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_AddrOutOfRangeError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_ConversionError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_InterfaceNotImplementedError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_BadStatusError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_IntrError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_StreamDoneError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_FailedStreamError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_MissingOnceTagError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_MissingIncludeFileNameError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_NoYAMLSupportError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_NoError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_MultipleInstantiationError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_BadSchemaVersionError;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) CpswPyExcT_TimeoutError;

#endif /* !__PYX_HAVE_API__pycpsw */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpycpsw(void);
#else
PyMODINIT_FUNC PyInit_pycpsw(void);
#endif

#endif /* !__PYX_HAVE__pycpsw */
