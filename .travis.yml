sudo: required

os: linux

dist: xenial

language: c

compiler: gcc

env:
  global:
    - PACKAGE_TOP=$HOME/package
    - BOOST_DIR=$PACKAGE_TOP/boost/1.63.0
    - YAML_CPP_DIR=$PACKAGE_TOP/yaml-cpp/yaml-cpp-0.5.3
    - PYTHON_DIR=$PACKAGE_TOP/python/3.6.1
    - ARCH=linux-x86_64

before_install:
    - mkdir -p $BOOST_DIR
    - mkdir -p $YAML_CPP_DIR
    - mkdir -p $PYTHON_DIR

install:
    # install python 3.6.1
    - cd $PYTHON_DIR
    - wget -O Python-3.6.1.tgz https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz
    - tar xzf Python-3.6.1.tgz --strip 1
    - ./configure --quiet
    - make --quiet
    - sudo make install 1>/dev/null 2>&1

    # Install boost
    - cd $BOOST_DIR
    - wget -O boost_1_63_0.tar.gz http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.gz/download
    - tar xzf boost_1_63_0.tar.gz --strip 1
    - ./bootstrap.sh --with-libraries=atomic,python
    # Boost fails to find the correct python3 paths automatically, so we need to patch project-config.jam
    - |
      sed -i -e 's/using python.*/using python : 3.6 : \/usr\/local\/bin\/python3 : \/usr\/local\/include\/python3.6m\/ : \/usr\/local\/lib\/python3.6\/ ;/g' project-config.jam
    - travis_wait ./b2 variant=release threading=multi -d0
    - sudo ./b2 install 1>/dev/null 2>&1

    # Install YAML-CPP
    - cd $YAML_CPP_DIR
    - wget -O yaml-cpp-0.5.3.tar.gz https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.5.3.tar.gz
    - tar zxf yaml-cpp-0.5.3.tar.gz --strip 1
    - mkdir build; cd build
    - cmake .. -DPYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3
    - make #--quiet
    - sudo make install #1>/dev/null 2>&1

before_script:
    # Prepare config.mak file
    - cd $TRAVIS_BUILD_DIR
    - rm -f config.mak
    # - echo "WITH_STATIC_LIBRARIES_default=YES"        >> config.mak
    - echo "pyinc_DIR=/usr/local/include/python3.6m/" >> config.mak
    - echo "USE_CXX11_default=NO"                     >> config.mak
    - echo "INSTALL_DIR=/usr/local/cpsw/"             >> config.mak

script:
    - make
    - sudo make install

    - echo $LD_LIBRARY_PATH
    - source env.slac.sh
    - echo $LD_LIBRARY_PATH
    - ldd /usr/local/cpsw/linux-x86_64/bin/udpsrv
    - ls
    # Run the tests:
    #- source env.slac.sh    # Setup the enviroment
    #- udpsrv -S0 -L0 &      # Start udpsrv in the background
    #- make test             # Run the tests

    # Test to import the python wrapper
    # - python3 -c "import pycpsw"
